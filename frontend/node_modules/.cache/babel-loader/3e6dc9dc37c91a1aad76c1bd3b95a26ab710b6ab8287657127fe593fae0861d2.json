{"ast":null,"code":"/**\n * Servicio para comunicación con la API\n * Maneja requests HTTP y gestión de tokens\n */\n\nimport axios from 'axios';\nclass ApiService {\n  constructor() {\n    // Configurar instancia de axios\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_API_URL || '/api/v1',\n      timeout: 30000,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Interceptor para agregar token automáticamente\n    this.api.interceptors.request.use(config => {\n      const token = localStorage.getItem('qr_units_token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n\n    // Interceptor para manejar respuestas\n    this.api.interceptors.response.use(response => response, error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        // Token expirado o inválido\n        this.clearAuth();\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * Configura el token de autenticación\n   */\n  setAuthToken(token) {\n    if (token) {\n      this.api.defaults.headers.Authorization = `Bearer ${token}`;\n    } else {\n      delete this.api.defaults.headers.Authorization;\n    }\n  }\n\n  /**\n   * Limpia autenticación\n   */\n  clearAuth() {\n    localStorage.removeItem('qr_units_token');\n    localStorage.removeItem('qr_units_user');\n    delete this.api.defaults.headers.Authorization;\n  }\n\n  /**\n   * Genera token mock para desarrollo\n   */\n  async generateMockToken(userId, role) {\n    const response = await axios.post('/api/v1/auth/mock-token', {\n      user_id: userId,\n      role: role\n    });\n    return response.data;\n  }\n\n  /**\n   * Obtiene información de una unidad\n   */\n  async getUnit(unitId) {\n    const response = await this.api.get(`/units/${unitId}`);\n    return response.data;\n  }\n\n  /**\n   * Obtiene historial de eventos de una unidad\n   */\n  async getUnitEvents(unitId, limit = 50) {\n    const response = await this.api.get(`/units/${unitId}/events`, {\n      params: {\n        limit\n      }\n    });\n    return response.data;\n  }\n\n  /**\n   * Registra un nuevo evento\n   */\n  async createEvent(unitId, eventData, photo = null) {\n    const formData = new FormData();\n\n    // Agregar datos del evento\n    Object.keys(eventData).forEach(key => {\n      if (eventData[key] !== null && eventData[key] !== undefined) {\n        formData.append(key, eventData[key]);\n      }\n    });\n\n    // Agregar foto si existe\n    if (photo) {\n      formData.append('photo', photo);\n    }\n    const response = await this.api.post(`/units/${unitId}/events`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  }\n\n  /**\n   * Obtiene lista de unidades\n   */\n  async getUnits(filters = {}) {\n    const response = await this.api.get('/units', {\n      params: filters\n    });\n    return response.data;\n  }\n\n  /**\n   * Verifica estado de sincronización\n   */\n  async getSyncStatus(unitId) {\n    const response = await this.api.get(`/units/${unitId}/sync-status`);\n    return response.data;\n  }\n\n  /**\n   * Health check del servidor\n   */\n  async healthCheck() {\n    const response = await axios.get('/health');\n    return response.data;\n  }\n\n  /**\n   * Sube múltiples eventos (para sincronización offline)\n   */\n  async syncEvents(events) {\n    const results = [];\n    for (const event of events) {\n      try {\n        const result = await this.createEvent(event.unit_id, event.eventData, event.photo);\n        results.push({\n          success: true,\n          event_id: event.id,\n          result\n        });\n      } catch (error) {\n        var _error$response2;\n        results.push({\n          success: false,\n          event_id: event.id,\n          error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message\n        });\n      }\n    }\n    return results;\n  }\n}\n\n// Instancia singleton del servicio\nexport const apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["axios","ApiService","constructor","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","clearAuth","window","location","href","setAuthToken","defaults","removeItem","generateMockToken","userId","role","post","user_id","data","getUnit","unitId","get","getUnitEvents","limit","params","createEvent","eventData","photo","formData","FormData","Object","keys","forEach","key","undefined","append","getUnits","filters","getSyncStatus","healthCheck","syncEvents","events","results","event","result","unit_id","push","success","event_id","id","_error$response2","message","apiService"],"sources":["C:/Users/jejef/OneDrive/windsurf/proyecto-vinculacion-acciones-QR/frontend/src/services/apiService.js"],"sourcesContent":["/**\n * Servicio para comunicación con la API\n * Maneja requests HTTP y gestión de tokens\n */\n\nimport axios from 'axios';\n\nclass ApiService {\n  constructor() {\n    // Configurar instancia de axios\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_API_URL || '/api/v1',\n      timeout: 30000,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Interceptor para agregar token automáticamente\n    this.api.interceptors.request.use(\n      (config) => {\n        const token = localStorage.getItem('qr_units_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => Promise.reject(error)\n    );\n\n    // Interceptor para manejar respuestas\n    this.api.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          // Token expirado o inválido\n          this.clearAuth();\n          window.location.href = '/login';\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  /**\n   * Configura el token de autenticación\n   */\n  setAuthToken(token) {\n    if (token) {\n      this.api.defaults.headers.Authorization = `Bearer ${token}`;\n    } else {\n      delete this.api.defaults.headers.Authorization;\n    }\n  }\n\n  /**\n   * Limpia autenticación\n   */\n  clearAuth() {\n    localStorage.removeItem('qr_units_token');\n    localStorage.removeItem('qr_units_user');\n    delete this.api.defaults.headers.Authorization;\n  }\n\n  /**\n   * Genera token mock para desarrollo\n   */\n  async generateMockToken(userId, role) {\n    const response = await axios.post('/api/v1/auth/mock-token', {\n      user_id: userId,\n      role: role\n    });\n    return response.data;\n  }\n\n  /**\n   * Obtiene información de una unidad\n   */\n  async getUnit(unitId) {\n    const response = await this.api.get(`/units/${unitId}`);\n    return response.data;\n  }\n\n  /**\n   * Obtiene historial de eventos de una unidad\n   */\n  async getUnitEvents(unitId, limit = 50) {\n    const response = await this.api.get(`/units/${unitId}/events`, {\n      params: { limit }\n    });\n    return response.data;\n  }\n\n  /**\n   * Registra un nuevo evento\n   */\n  async createEvent(unitId, eventData, photo = null) {\n    const formData = new FormData();\n    \n    // Agregar datos del evento\n    Object.keys(eventData).forEach(key => {\n      if (eventData[key] !== null && eventData[key] !== undefined) {\n        formData.append(key, eventData[key]);\n      }\n    });\n\n    // Agregar foto si existe\n    if (photo) {\n      formData.append('photo', photo);\n    }\n\n    const response = await this.api.post(`/units/${unitId}/events`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n\n    return response.data;\n  }\n\n  /**\n   * Obtiene lista de unidades\n   */\n  async getUnits(filters = {}) {\n    const response = await this.api.get('/units', { params: filters });\n    return response.data;\n  }\n\n  /**\n   * Verifica estado de sincronización\n   */\n  async getSyncStatus(unitId) {\n    const response = await this.api.get(`/units/${unitId}/sync-status`);\n    return response.data;\n  }\n\n  /**\n   * Health check del servidor\n   */\n  async healthCheck() {\n    const response = await axios.get('/health');\n    return response.data;\n  }\n\n  /**\n   * Sube múltiples eventos (para sincronización offline)\n   */\n  async syncEvents(events) {\n    const results = [];\n    \n    for (const event of events) {\n      try {\n        const result = await this.createEvent(\n          event.unit_id, \n          event.eventData, \n          event.photo\n        );\n        results.push({ success: true, event_id: event.id, result });\n      } catch (error) {\n        results.push({ \n          success: false, \n          event_id: event.id, \n          error: error.response?.data || error.message \n        });\n      }\n    }\n    \n    return results;\n  }\n}\n\n// Instancia singleton del servicio\nexport const apiService = new ApiService();\nexport default apiService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}