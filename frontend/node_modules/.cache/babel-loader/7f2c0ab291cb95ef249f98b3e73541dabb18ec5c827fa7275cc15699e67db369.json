{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jejef\\\\OneDrive\\\\windsurf\\\\proyecto-vinculacion-acciones-QR\\\\frontend\\\\src\\\\services\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/**\n * Context de autenticación\n * Maneja login, logout y persistencia de sesión\n */\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiService } from './apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe usarse dentro de un AuthProvider');\n  }\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Cargar usuario desde localStorage al iniciar\n  useEffect(() => {\n    const loadUser = () => {\n      try {\n        const savedUser = localStorage.getItem('qr_units_user');\n        const savedToken = localStorage.getItem('qr_units_token');\n        if (savedUser && savedToken) {\n          const userData = JSON.parse(savedUser);\n          setUser(userData);\n          apiService.setAuthToken(savedToken);\n        }\n      } catch (error) {\n        console.error('Error cargando usuario:', error);\n        logout();\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUser();\n  }, []);\n\n  /**\n   * Iniciar sesión con credenciales mock\n   */\n  const login = async (userId, role) => {\n    try {\n      setLoading(true);\n\n      // Generar token mock\n      const response = await apiService.generateMockToken(userId, role);\n      const userData = {\n        user_id: userId,\n        role: role,\n        loginTime: new Date().toISOString()\n      };\n\n      // Guardar en localStorage\n      localStorage.setItem('qr_units_user', JSON.stringify(userData));\n      localStorage.setItem('qr_units_token', response.token);\n\n      // Configurar token en el servicio API\n      apiService.setAuthToken(response.token);\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Error en login:', error);\n      return {\n        success: false,\n        error: error.message || 'Error de autenticación'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Cerrar sesión\n   */\n  const logout = () => {\n    localStorage.removeItem('qr_units_user');\n    localStorage.removeItem('qr_units_token');\n    apiService.setAuthToken(null);\n    setUser(null);\n  };\n\n  /**\n   * Verificar si el usuario tiene un rol específico\n   */\n  const hasRole = requiredRole => {\n    if (!user) return false;\n    if (user.role === 'admin') return true;\n    return user.role === requiredRole;\n  };\n\n  /**\n   * Verificar si el usuario puede realizar una acción\n   */\n  const canPerformAction = eventType => {\n    if (!user) return false;\n    if (user.role === 'admin') return true;\n\n    // Mapeo de permisos por rol\n    const rolePermissions = {\n      warehouse: ['disponible', 'entrada_reparacion', 'confirmar_recolectado'],\n      delivery: ['salida_a_ubicacion', 'confirmar_entrega'],\n      cleaner: ['iniciar_limpieza', 'limpieza_realizada'],\n      collection: ['marcar_recoleccion', 'confirmar_recolectado'],\n      repair: ['entrada_reparacion', 'reparacion_finalizada']\n    };\n    const permissions = rolePermissions[user.role] || [];\n    return permissions.includes(eventType);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    hasRole,\n    canPerformAction\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","loadUser","savedUser","localStorage","getItem","savedToken","userData","JSON","parse","setAuthToken","error","console","logout","login","userId","role","response","generateMockToken","user_id","loginTime","Date","toISOString","setItem","stringify","token","success","message","removeItem","hasRole","requiredRole","canPerformAction","eventType","rolePermissions","warehouse","delivery","cleaner","collection","repair","permissions","includes","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jejef/OneDrive/windsurf/proyecto-vinculacion-acciones-QR/frontend/src/services/AuthContext.js"],"sourcesContent":["/**\n * Context de autenticación\n * Maneja login, logout y persistencia de sesión\n */\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiService } from './apiService';\n\nconst AuthContext = createContext(null);\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe usarse dentro de un AuthProvider');\n  }\n  return context;\n}\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Cargar usuario desde localStorage al iniciar\n  useEffect(() => {\n    const loadUser = () => {\n      try {\n        const savedUser = localStorage.getItem('qr_units_user');\n        const savedToken = localStorage.getItem('qr_units_token');\n        \n        if (savedUser && savedToken) {\n          const userData = JSON.parse(savedUser);\n          setUser(userData);\n          apiService.setAuthToken(savedToken);\n        }\n      } catch (error) {\n        console.error('Error cargando usuario:', error);\n        logout();\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  /**\n   * Iniciar sesión con credenciales mock\n   */\n  const login = async (userId, role) => {\n    try {\n      setLoading(true);\n      \n      // Generar token mock\n      const response = await apiService.generateMockToken(userId, role);\n      \n      const userData = {\n        user_id: userId,\n        role: role,\n        loginTime: new Date().toISOString()\n      };\n\n      // Guardar en localStorage\n      localStorage.setItem('qr_units_user', JSON.stringify(userData));\n      localStorage.setItem('qr_units_token', response.token);\n      \n      // Configurar token en el servicio API\n      apiService.setAuthToken(response.token);\n      \n      setUser(userData);\n      return { success: true };\n      \n    } catch (error) {\n      console.error('Error en login:', error);\n      return { \n        success: false, \n        error: error.message || 'Error de autenticación' \n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Cerrar sesión\n   */\n  const logout = () => {\n    localStorage.removeItem('qr_units_user');\n    localStorage.removeItem('qr_units_token');\n    apiService.setAuthToken(null);\n    setUser(null);\n  };\n\n  /**\n   * Verificar si el usuario tiene un rol específico\n   */\n  const hasRole = (requiredRole) => {\n    if (!user) return false;\n    if (user.role === 'admin') return true;\n    return user.role === requiredRole;\n  };\n\n  /**\n   * Verificar si el usuario puede realizar una acción\n   */\n  const canPerformAction = (eventType) => {\n    if (!user) return false;\n    if (user.role === 'admin') return true;\n\n    // Mapeo de permisos por rol\n    const rolePermissions = {\n      warehouse: ['disponible', 'entrada_reparacion', 'confirmar_recolectado'],\n      delivery: ['salida_a_ubicacion', 'confirmar_entrega'],\n      cleaner: ['iniciar_limpieza', 'limpieza_realizada'],\n      collection: ['marcar_recoleccion', 'confirmar_recolectado'],\n      repair: ['entrada_reparacion', 'reparacion_finalizada']\n    };\n\n    const permissions = rolePermissions[user.role] || [];\n    return permissions.includes(eventType);\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    hasRole,\n    canPerformAction\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,SAASQ,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EACA,OAAOD,OAAO;AAChB;AAACD,EAAA,CANeD,OAAO;AAQvB,OAAO,SAASI,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMgB,QAAQ,GAAGA,CAAA,KAAM;MACrB,IAAI;QACF,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;QACvD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;QAEzD,IAAIF,SAAS,IAAIG,UAAU,EAAE;UAC3B,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACN,SAAS,CAAC;UACtCJ,OAAO,CAACQ,QAAQ,CAAC;UACjBpB,UAAU,CAACuB,YAAY,CAACJ,UAAU,CAAC;QACrC;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CE,MAAM,CAAC,CAAC;MACV,CAAC,SAAS;QACRZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;EACE,MAAMY,KAAK,GAAG,MAAAA,CAAOC,MAAM,EAAEC,IAAI,KAAK;IACpC,IAAI;MACFf,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAMgB,QAAQ,GAAG,MAAM9B,UAAU,CAAC+B,iBAAiB,CAACH,MAAM,EAAEC,IAAI,CAAC;MAEjE,MAAMT,QAAQ,GAAG;QACfY,OAAO,EAAEJ,MAAM;QACfC,IAAI,EAAEA,IAAI;QACVI,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;;MAED;MACAlB,YAAY,CAACmB,OAAO,CAAC,eAAe,EAAEf,IAAI,CAACgB,SAAS,CAACjB,QAAQ,CAAC,CAAC;MAC/DH,YAAY,CAACmB,OAAO,CAAC,gBAAgB,EAAEN,QAAQ,CAACQ,KAAK,CAAC;;MAEtD;MACAtC,UAAU,CAACuB,YAAY,CAACO,QAAQ,CAACQ,KAAK,CAAC;MAEvC1B,OAAO,CAACQ,QAAQ,CAAC;MACjB,OAAO;QAAEmB,OAAO,EAAE;MAAK,CAAC;IAE1B,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,OAAO;QACLe,OAAO,EAAE,KAAK;QACdf,KAAK,EAAEA,KAAK,CAACgB,OAAO,IAAI;MAC1B,CAAC;IACH,CAAC,SAAS;MACR1B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;AACF;AACA;EACE,MAAMY,MAAM,GAAGA,CAAA,KAAM;IACnBT,YAAY,CAACwB,UAAU,CAAC,eAAe,CAAC;IACxCxB,YAAY,CAACwB,UAAU,CAAC,gBAAgB,CAAC;IACzCzC,UAAU,CAACuB,YAAY,CAAC,IAAI,CAAC;IAC7BX,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;;EAED;AACF;AACA;EACE,MAAM8B,OAAO,GAAIC,YAAY,IAAK;IAChC,IAAI,CAAChC,IAAI,EAAE,OAAO,KAAK;IACvB,IAAIA,IAAI,CAACkB,IAAI,KAAK,OAAO,EAAE,OAAO,IAAI;IACtC,OAAOlB,IAAI,CAACkB,IAAI,KAAKc,YAAY;EACnC,CAAC;;EAED;AACF;AACA;EACE,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;IACtC,IAAI,CAAClC,IAAI,EAAE,OAAO,KAAK;IACvB,IAAIA,IAAI,CAACkB,IAAI,KAAK,OAAO,EAAE,OAAO,IAAI;;IAEtC;IACA,MAAMiB,eAAe,GAAG;MACtBC,SAAS,EAAE,CAAC,YAAY,EAAE,oBAAoB,EAAE,uBAAuB,CAAC;MACxEC,QAAQ,EAAE,CAAC,oBAAoB,EAAE,mBAAmB,CAAC;MACrDC,OAAO,EAAE,CAAC,kBAAkB,EAAE,oBAAoB,CAAC;MACnDC,UAAU,EAAE,CAAC,oBAAoB,EAAE,uBAAuB,CAAC;MAC3DC,MAAM,EAAE,CAAC,oBAAoB,EAAE,uBAAuB;IACxD,CAAC;IAED,MAAMC,WAAW,GAAGN,eAAe,CAACnC,IAAI,CAACkB,IAAI,CAAC,IAAI,EAAE;IACpD,OAAOuB,WAAW,CAACC,QAAQ,CAACR,SAAS,CAAC;EACxC,CAAC;EAED,MAAMS,KAAK,GAAG;IACZ3C,IAAI;IACJE,OAAO;IACPc,KAAK;IACLD,MAAM;IACNgB,OAAO;IACPE;EACF,CAAC;EAED,oBACE1C,OAAA,CAACC,WAAW,CAACoD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA7C,QAAA,EAChCA;EAAQ;IAAA+C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACjD,GAAA,CArHeF,YAAY;AAAAoD,EAAA,GAAZpD,YAAY;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}